{
    "bug_id": 70,
    "bug_type": "SL SH SF",
    "buggy_lines": "                found = key.equals(prop.getName());",
    "code": "    public void remove(SettableBeanProperty propToRm)\n    {\n        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n        String key = getPropertyName(propToRm);\n        boolean found = false;\n\n        for (int i = 1, end = _hashArea.length; i < end; i += 2) {\n            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];\n            if (prop == null) {\n                continue;\n            }\n            if (!found) {\n                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n                //   as only former is lower-case in case-insensitive case\n                found = key.equals(prop.getName());\n                if (found) {\n                    // need to leave a hole here\n                    _propsInOrder[_findFromOrdered(prop)] = null;\n                    continue;\n                }\n            }\n            props.add(prop);\n        }\n        if (!found) {\n            throw new NoSuchElementException(\"No entry '\"+propToRm.getName()+\"' found, can't remove\");\n        }\n        init(props);\n    }",
    "fixed_code": "    public void remove(SettableBeanProperty propToRm)\n    {\n        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n        String key = getPropertyName(propToRm);\n        boolean found = false;\n\n        for (int i = 1, end = _hashArea.length; i < end; i += 2) {\n            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];\n            if (prop == null) {\n                continue;\n            }\n            if (!found) {\n                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n                //   as only former is lower-case in case-insensitive case\n                found = key.equals(_hashArea[i-1]);\n                if (found) {\n                    // need to leave a hole here\n                    _propsInOrder[_findFromOrdered(prop)] = null;\n                    continue;\n                }\n            }\n            props.add(prop);\n        }\n        if (!found) {\n            throw new NoSuchElementException(\"No entry '\"+propToRm.getName()+\"' found, can't remove\");\n        }\n        init(props);\n    }",
    "fixed_lines": "                found = key.equals(_hashArea[i-1]);",
    "masked_code": "    public void remove(SettableBeanProperty propToRm)\n    {\n        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n        String key = getPropertyName(propToRm);\n        boolean found = false;\n\n        for (int i = 1, end = _hashArea.length; i < end; i += 2) {\n            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];\n            if (prop == null) {\n                continue;\n            }\n            if (!found) {\n                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n                //   as only former is lower-case in case-insensitive case\n>>> [ INFILL ] <<<\n                if (found) {\n                    // need to leave a hole here\n                    _propsInOrder[_findFromOrdered(prop)] = null;\n                    continue;\n                }\n            }\n            props.add(prop);\n        }\n        if (!found) {\n            throw new NoSuchElementException(\"No entry '\"+propToRm.getName()+\"' found, can't remove\");\n        }\n        init(props);\n    }",
    "project": "JacksonDatabind",
    "test_error_message": "java.util.NoSuchElementException: No entry 'businessAddress' found, can't remove",
    "test_framework": "defects4j",
    "test_line": "        Person p = mapper.readValue(\"{ }\", Person.class);",
    "test_name": "testCaseInsensitiveUnwrap",
    "test_suite": "com.fasterxml.jackson.databind.struct.TestUnwrapped",
    "time_buggy": "2017-01-09 13:45:35 -0800",
    "time_fixed": "2017-01-09 21:38:36 -0800",
    "bug_description": "Bug Description:\n\nBug ID: 70\nProject: JacksonDatabind\nBug Type: SL SH SF\n\nError Message: java.util.NoSuchElementException: No entry 'businessAddress' found, can't remove\n\nDescription:\n\nThis bug occurs in the remove method of the SettableBeanProperty class. The problem appears when attempting to remove a property that does not exist in the collection of properties handled by the function. Specifically, a NoSuchElementException is thrown with a message implying that 'businessAddress' could not be found and was therefore unable to be removed.\n\nBuggy code and Source of the Bug:\n\nThe 'found' variable is set to check if the property to be removed has been found in the collection by comparing its name to the properties' names in the collection.\n\n```java\n    found = key.equals(prop.getName());\n```\n\nHowever, this comparison doesn't happen on the correct element. It is comparing the key with prop.getName(), but it should be compared with _hashArea[i-1].\n\nFixed Code:\n\nTo fix the bug, we need to update the relevant line of code to compare the name of the property to the correct element in the hash area.\n\n```java\n    found = key.equals(_hashArea[i-1]);\n```\n\nAfter this update, the desired property is correctly identified and removed from the collection without triggering a NoSuchElementException.\n\nFix Explanation:\n\nThe original code used prop.getName(), which didn't point to the correct element in the hash area. The value in _hashArea[i-1] (the previous element) should be used for the comparison. By comparing key and _hashArea[i-1], we will check the correct element and the problem will be fixed."
}