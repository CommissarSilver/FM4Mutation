{
    "bug_id": 25,
    "bug_type": "SL SH SF",
    "buggy_lines": "    private static final String[] preserveWhitespaceTags = {\"pre\", \"plaintext\", \"title\"};",
    "code": "    public String toString() {\n        return tagName;\n    }\n\n    // internal static initialisers:\n    // prepped from http://www.w3.org/TR/REC-html40/sgml/dtd.html and other sources\n    private static final String[] blockTags = {\n            \"html\", \"head\", \"body\", \"frameset\", \"script\", \"noscript\", \"style\", \"meta\", \"link\", \"title\", \"frame\",\n            \"noframes\", \"section\", \"nav\", \"aside\", \"hgroup\", \"header\", \"footer\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n            \"ul\", \"ol\", \"pre\", \"div\", \"blockquote\", \"hr\", \"address\", \"figure\", \"figcaption\", \"form\", \"fieldset\", \"ins\",\n            \"del\", \"dl\", \"dt\", \"dd\", \"li\", \"table\", \"caption\", \"thead\", \"tfoot\", \"tbody\", \"colgroup\", \"col\", \"tr\", \"th\",\n            \"td\", \"video\", \"audio\", \"canvas\", \"details\", \"menu\", \"plaintext\"\n    };\n    private static final String[] inlineTags = {\n            \"object\", \"base\", \"font\", \"tt\", \"i\", \"b\", \"u\", \"big\", \"small\", \"em\", \"strong\", \"dfn\", \"code\", \"samp\", \"kbd\",\n            \"var\", \"cite\", \"abbr\", \"time\", \"acronym\", \"mark\", \"ruby\", \"rt\", \"rp\", \"a\", \"img\", \"br\", \"wbr\", \"map\", \"q\",\n            \"sub\", \"sup\", \"bdo\", \"iframe\", \"embed\", \"span\", \"input\", \"select\", \"textarea\", \"label\", \"button\", \"optgroup\",\n            \"option\", \"legend\", \"datalist\", \"keygen\", \"output\", \"progress\", \"meter\", \"area\", \"param\", \"source\", \"track\",\n            \"summary\", \"command\", \"device\"\n    };\n    private static final String[] emptyTags = {\n            \"meta\", \"link\", \"base\", \"frame\", \"img\", \"br\", \"wbr\", \"embed\", \"hr\", \"input\", \"keygen\", \"col\", \"command\",\n            \"device\"\n    };\n    private static final String[] formatAsInlineTags = {\n            \"title\", \"a\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"pre\", \"address\", \"li\", \"th\", \"td\", \"script\", \"style\"\n    };\n    private static final String[] preserveWhitespaceTags = {\"pre\", \"plaintext\", \"title\"};\n\n    static {\n        // creates\n        for (String tagName : blockTags) {\n            Tag tag = new Tag(tagName);\n            register(tag);\n        }\n        for (String tagName : inlineTags) {\n            Tag tag = new Tag(tagName);\n            tag.isBlock = false;\n            tag.canContainBlock = false;\n            tag.formatAsBlock = false;\n            register(tag);\n        }\n\n        // mods:\n        for (String tagName : emptyTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.canContainBlock = false;\n            tag.canContainInline = false;\n            tag.empty = true;\n        }\n\n        for (String tagName : formatAsInlineTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.formatAsBlock = false;\n        }\n\n        for (String tagName : preserveWhitespaceTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.preserveWhitespace = true;\n        }\n    }",
    "fixed_code": "    public String toString() {\n        return tagName;\n    }\n\n    // internal static initialisers:\n    // prepped from http://www.w3.org/TR/REC-html40/sgml/dtd.html and other sources\n    private static final String[] blockTags = {\n            \"html\", \"head\", \"body\", \"frameset\", \"script\", \"noscript\", \"style\", \"meta\", \"link\", \"title\", \"frame\",\n            \"noframes\", \"section\", \"nav\", \"aside\", \"hgroup\", \"header\", \"footer\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n            \"ul\", \"ol\", \"pre\", \"div\", \"blockquote\", \"hr\", \"address\", \"figure\", \"figcaption\", \"form\", \"fieldset\", \"ins\",\n            \"del\", \"dl\", \"dt\", \"dd\", \"li\", \"table\", \"caption\", \"thead\", \"tfoot\", \"tbody\", \"colgroup\", \"col\", \"tr\", \"th\",\n            \"td\", \"video\", \"audio\", \"canvas\", \"details\", \"menu\", \"plaintext\"\n    };\n    private static final String[] inlineTags = {\n            \"object\", \"base\", \"font\", \"tt\", \"i\", \"b\", \"u\", \"big\", \"small\", \"em\", \"strong\", \"dfn\", \"code\", \"samp\", \"kbd\",\n            \"var\", \"cite\", \"abbr\", \"time\", \"acronym\", \"mark\", \"ruby\", \"rt\", \"rp\", \"a\", \"img\", \"br\", \"wbr\", \"map\", \"q\",\n            \"sub\", \"sup\", \"bdo\", \"iframe\", \"embed\", \"span\", \"input\", \"select\", \"textarea\", \"label\", \"button\", \"optgroup\",\n            \"option\", \"legend\", \"datalist\", \"keygen\", \"output\", \"progress\", \"meter\", \"area\", \"param\", \"source\", \"track\",\n            \"summary\", \"command\", \"device\"\n    };\n    private static final String[] emptyTags = {\n            \"meta\", \"link\", \"base\", \"frame\", \"img\", \"br\", \"wbr\", \"embed\", \"hr\", \"input\", \"keygen\", \"col\", \"command\",\n            \"device\"\n    };\n    private static final String[] formatAsInlineTags = {\n            \"title\", \"a\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"pre\", \"address\", \"li\", \"th\", \"td\", \"script\", \"style\"\n    };\n    private static final String[] preserveWhitespaceTags = {\"pre\", \"plaintext\", \"title\", \"textarea\"};\n\n    static {\n        // creates\n        for (String tagName : blockTags) {\n            Tag tag = new Tag(tagName);\n            register(tag);\n        }\n        for (String tagName : inlineTags) {\n            Tag tag = new Tag(tagName);\n            tag.isBlock = false;\n            tag.canContainBlock = false;\n            tag.formatAsBlock = false;\n            register(tag);\n        }\n\n        // mods:\n        for (String tagName : emptyTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.canContainBlock = false;\n            tag.canContainInline = false;\n            tag.empty = true;\n        }\n\n        for (String tagName : formatAsInlineTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.formatAsBlock = false;\n        }\n\n        for (String tagName : preserveWhitespaceTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.preserveWhitespace = true;\n        }\n    }",
    "fixed_lines": "    private static final String[] preserveWhitespaceTags = {\"pre\", \"plaintext\", \"title\", \"textarea\"};",
    "masked_code": "    public String toString() {\n        return tagName;\n    }\n\n    // internal static initialisers:\n    // prepped from http://www.w3.org/TR/REC-html40/sgml/dtd.html and other sources\n    private static final String[] blockTags = {\n            \"html\", \"head\", \"body\", \"frameset\", \"script\", \"noscript\", \"style\", \"meta\", \"link\", \"title\", \"frame\",\n            \"noframes\", \"section\", \"nav\", \"aside\", \"hgroup\", \"header\", \"footer\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n            \"ul\", \"ol\", \"pre\", \"div\", \"blockquote\", \"hr\", \"address\", \"figure\", \"figcaption\", \"form\", \"fieldset\", \"ins\",\n            \"del\", \"dl\", \"dt\", \"dd\", \"li\", \"table\", \"caption\", \"thead\", \"tfoot\", \"tbody\", \"colgroup\", \"col\", \"tr\", \"th\",\n            \"td\", \"video\", \"audio\", \"canvas\", \"details\", \"menu\", \"plaintext\"\n    };\n    private static final String[] inlineTags = {\n            \"object\", \"base\", \"font\", \"tt\", \"i\", \"b\", \"u\", \"big\", \"small\", \"em\", \"strong\", \"dfn\", \"code\", \"samp\", \"kbd\",\n            \"var\", \"cite\", \"abbr\", \"time\", \"acronym\", \"mark\", \"ruby\", \"rt\", \"rp\", \"a\", \"img\", \"br\", \"wbr\", \"map\", \"q\",\n            \"sub\", \"sup\", \"bdo\", \"iframe\", \"embed\", \"span\", \"input\", \"select\", \"textarea\", \"label\", \"button\", \"optgroup\",\n            \"option\", \"legend\", \"datalist\", \"keygen\", \"output\", \"progress\", \"meter\", \"area\", \"param\", \"source\", \"track\",\n            \"summary\", \"command\", \"device\"\n    };\n    private static final String[] emptyTags = {\n            \"meta\", \"link\", \"base\", \"frame\", \"img\", \"br\", \"wbr\", \"embed\", \"hr\", \"input\", \"keygen\", \"col\", \"command\",\n            \"device\"\n    };\n    private static final String[] formatAsInlineTags = {\n            \"title\", \"a\", \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"pre\", \"address\", \"li\", \"th\", \"td\", \"script\", \"style\"\n    };\n>>> [ INFILL ] <<<\n\n    static {\n        // creates\n        for (String tagName : blockTags) {\n            Tag tag = new Tag(tagName);\n            register(tag);\n        }\n        for (String tagName : inlineTags) {\n            Tag tag = new Tag(tagName);\n            tag.isBlock = false;\n            tag.canContainBlock = false;\n            tag.formatAsBlock = false;\n            register(tag);\n        }\n\n        // mods:\n        for (String tagName : emptyTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.canContainBlock = false;\n            tag.canContainInline = false;\n            tag.empty = true;\n        }\n\n        for (String tagName : formatAsInlineTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.formatAsBlock = false;\n        }\n\n        for (String tagName : preserveWhitespaceTags) {\n            Tag tag = tags.get(tagName);\n            Validate.notNull(tag);\n            tag.preserveWhitespace = true;\n        }\n    }",
    "project": "Jsoup",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<One[",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(expect, el.text());",
    "test_name": "preservesSpaceInTextArea",
    "test_suite": "org.jsoup.parser.HtmlParserTest",
    "time_buggy": "2012-05-28 11:18:42 -0700",
    "time_fixed": "2012-05-28 11:49:07 -0700",
    "bug_description": "Bug ID: 25\n\nTitle: Missing HTML tag in the 'preserveWhitespaceTags' Array in Jsoup's Tag.java\n\nBug Type: SL SH SF\n\nDescription:\n\nThe test error message shows an assertion failed error, which might suggest that there is a problem with the code during run time and the output is not as expected. \n\nThe problem lies in the 'preserveWhitespaceTags' array. In the buggy code, preserveWhitespaceTags only includes \"pre\", \"plaintext\", and \"title\". It missed the HTML tag \"textarea\", which is supposed to be there to instruct how to handle the whitespace. \n\nSpecifically, it's in these lines:\n\n    private static final String[] preserveWhitespaceTags = {\"pre\", \"plaintext\", \"title\"};\n\nHere's a detailed step-by-step of the bug:\n\n1. The Vsoup library is parsing an HTML document.\n2. During the parse process, it uses the 'preserveWhitespaceTags' \n    string array to determine HTML tags that should preserve whitespaces.\n3. The HTML tag \"textarea\" is not included in 'preserveWhitespaceTags' array.\n4. The parse process does not handle the whitespace within the \"textarea\" tag correctly.\n\nThis results in situations where the whitespace within a \"textarea\" tag is not correctly preserved, potentially leading to parsed HTML that doesn't match the original HTML document.\n\nFix:\n\nThe fix for the bug is simple. The \"textarea\" tag should be added to the 'preserveWhitespaceTags' array like so:\n\n    private static final String[] preserveWhitespaceTags = {\"pre\", \"plaintext\", \"title\", \"textarea\"};\n\nIncluding the \"textarea\" tag in 'preserveWhitespaceTags' ensures that the parse process correctly preserves the whitespace within a \"textarea\" tag, allowing the outcome of the parsed HTML to match the original HTML document."
}