{
    "bug_id": 29,
    "bug_type": "SL SH SF",
    "buggy_lines": "        description.appendText(wanted.toString());",
    "code": "    public void describeTo(Description description) {\n        description.appendText(\"same(\");\n        appendQuoting(description);\n        description.appendText(wanted.toString());\n        appendQuoting(description);\n        description.appendText(\")\");\n    }",
    "fixed_code": "    public void describeTo(Description description) {\n        description.appendText(\"same(\");\n        appendQuoting(description);\n        description.appendText(wanted == null ? \"null\" : wanted.toString());\n        appendQuoting(description);\n        description.appendText(\")\");\n    }",
    "fixed_lines": "        description.appendText(wanted == null ? \"null\" : wanted.toString());",
    "masked_code": "    public void describeTo(Description description) {\n        description.appendText(\"same(\");\n        appendQuoting(description);\n>>> [ INFILL ] <<<\n        appendQuoting(description);\n        description.appendText(\")\");\n    }",
    "project": "Mockito",
    "test_error_message": "java.lang.Exception: Unexpected exception, expected<java.lang.AssertionError> but was<java.lang.NullPointerException>",
    "test_framework": "defects4j",
    "test_line": "        verify(mock).objectArgMethod(same(null));",
    "test_name": "shouldNotThrowNPEWhenNullPassedToSame",
    "test_suite": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
    "time_buggy": "2010-11-18 15:53:29 +0100",
    "time_fixed": "2010-11-18 17:54:14 +0100",
    "bug_description": "Bug ID: 29\n\nProject: Mockito\n\nBug Type: SL SH SF\n\nTest Error Message: java.lang.Exception: Unexpected exception, expected<java.lang.AssertionError> but was<java.lang.NullPointerException>\n\nBug Description:\n\nThe issue lies in the 'describeTo' method of the Mockito project. The method is intended to append a string representation of the 'wanted' object to the passed 'description' object. The code erroneously assumes that the 'wanted' object is never null and calls the 'toString' method on it unconditionally. This results in a java.lang.NullPointerException if the 'wanted' object is indeed null. \n\nSteps to replicate:\n\n1. Create an instance of a class that contains the 'describeTo' method.\n2. Call the 'describeTo' method with a null 'wanted' object.\n\nLines of code that are buggy: \n\ndescription.appendText(wanted.toString());\n\nThe NullPointerException is thrown at this line because the code tries to call the 'toString' method on null 'wanted' object.\n\nFixed Code:\n\nIn the fixed code, a null check is added before calling the 'toString' method on the 'wanted' object. If 'wanted' is null, then \"null\" is appended to the 'description' object. Otherwise, the string representation of the 'wanted' object is appended. \n\nCode after bug fix:\n\npublic void describeTo(Description description) {\n    description.appendText(\"same(\");\n    appendQuoting(description);\n    description.appendText(wanted == null ? \"null\" : wanted.toString());\n    appendQuoting(description);\n    description.appendText(\")\");\n}\n\nImpact of bug:\n\nThis kind of bug can lead to an application crash, as it results in an unchecked exception at runtime. Fixes to these kinds of issues, as the one provided here, improve the robustness and reliability of the software application."
}