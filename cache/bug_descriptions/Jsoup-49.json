{
    "bug_id": 49,
    "bug_type": "SF",
    "buggy_lines": "        reindexChildren(index);",
    "code": "    protected void addChildren(int index, Node... children) {\n        Validate.noNullElements(children);\n        ensureChildNodes();\n        for (int i = children.length - 1; i >= 0; i--) {\n            Node in = children[i];\n            reparentChild(in);\n            childNodes.add(index, in);\n        }\n        reindexChildren(index);\n    }",
    "fixed_code": "    protected void addChildren(int index, Node... children) {\n        Validate.noNullElements(children);\n        ensureChildNodes();\n        for (int i = children.length - 1; i >= 0; i--) {\n            Node in = children[i];\n            reparentChild(in);\n            childNodes.add(index, in);\n            reindexChildren(index);\n        }\n    }",
    "fixed_lines": "            reindexChildren(index);",
    "masked_code": "    protected void addChildren(int index, Node... children) {\n        Validate.noNullElements(children);\n        ensureChildNodes();\n        for (int i = children.length - 1; i >= 0; i--) {\n            Node in = children[i];\n            reparentChild(in);\n            childNodes.add(index, in);\n        }\n>>> [ INFILL ] <<<\n    }",
    "project": "Jsoup",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<...><div3>Check</div3><[div4></div4><div1></div1><div2></div2><]/body>> but was:<...><div3>Check</div3><[]/body>>",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(\"<body><div3>Check</div3><div4></div4><div1></div1><div2></div2></body>\", result);",
    "test_name": "appendMustCorrectlyMoveChildrenInsideOneParentElement",
    "test_suite": "org.jsoup.nodes.ElementTest",
    "time_buggy": "2016-04-03 18:33:09 -0700",
    "time_fixed": "2016-04-03 20:19:13 -0700",
    "bug_description": "Bug Description:\n\nBug ID: 49\nProject: Jsoup\nBug Type: Syntax Failure (SF) \n\nAfter running a test, an AssertionFailedError was encountered and the problem appears to be coming from the 'addChildren' method in the code. The test error message shows discrepancy in expected and actual results: expected a closing tag for div4, div1 and div2 but it got closing body tag. As mentioned, the specific line causing the error is the 'reindexChildren(index);'.\n\nExisting Code:\n\nIn the existing piece of code, elements are added to \u2018childNodes\u2019. Validation ensures that there are no null elements in 'children'. After that, the \u2018addChildren\u2019 method is designed to re-parent child nodes, add them at a certain index, and then reindex the children from that defined index onward.\n\nThe \u2018reindexChildren(index)\u2019 method seems to be called after the completion of 'for' loop, which may be causing an incorrect indexing of children nodes and their subsequent closure in the HTML structure. \n\nBug:\n\nIt seems the bug is causing a Syntax Failure (SF) where HTML tags div4, div1, div2 aren't being properly closed. \n\nThe error message showcases that the expected output contained closed tags for div4, div1, and div2 before the closing body tag, but instead, it found the body tag closed immediately after the div3 closing tag, omitting div4, div1 and div2.\n\nResolution:\n\nIn order to correct the error, the 'reindexChildren(index)' method call has been moved inside the 'for' loop just below the line where a child node is added. By doing this, every time a new child node is added to the collection, reindexing is performed ensuring that correct ordering and structuring of the child nodes is maintained. \n\nFixed Code:\n\nIn the fixed code, the reindexChildren(index) is moved into the loop to ensure reindexing is performed after each child node is added which maintains the structure and order of the HTML tags. \n\nThis bug report would help developers to generate similar artificial java bugs to help in testing and developing error resolution skills."
}