{
    "bug_id": 64,
    "bug_type": "SF",
    "buggy_lines": "        tb.insert(startTag);",
    "code": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n        tb.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
    "fixed_code": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n        tb.insert(startTag);\n    }",
    "fixed_lines": "        tb.insert(startTag);",
    "masked_code": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n>>> [ INFILL ] <<<\n    }",
    "project": "Jsoup",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<...ead><style></style><[meta name=\"foo\"></head><body>One]</body></html>> but was:<...ead><style></style><[/head><body>&lt;meta name=foo&gt;&lt;/head&gt;&lt;body&gt;One&lt;/body&gt;&lt;/html&gt;]</body></html>>",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(\"<html><head><style></style><meta name=\\\"foo\\\"></head><body>One</body></html>\", TextUtil.stripNewlines(doc.html()));",
    "test_name": "handlesKnownEmptyStyle",
    "test_suite": "org.jsoup.parser.HtmlParserTest",
    "time_buggy": "2017-06-26 21:18:21 -0700",
    "time_fixed": "2017-06-29 15:24:05 -0700",
    "bug_description": "Bug ID: 64\nProject Name: Jsoup\nBug Type: Syntax Failure (SF)\n\nBug Description:\nIn the Jsoup project, an issue was found within the method \"handleRawtext\" that pertained to the insertion of a start tag in the HTML tree builder.\n\nA test using JUnit reflected the issue in which an AssertionFailedError was thrown. The test expected the targeted HTML to be parsed into a structure that included a metadata tag (\"<meta name=\"foo\">\"), but instead was parsed into an escaped string of HTML characters, indicating that the parser interpreted the \"<meta>\" tag as raw text, rather than as an HTML tag.\n\nSpecifically, the error message is as follows:\n\nError Message: junit.framework.AssertionFailedError: expected:<...ead><style></style><[meta name=\"foo\"></head><body>One]</body></html>> but was:<...ead><style></style><[/head><body>&lt;meta name=foo&gt;&lt;/head&gt;&lt;body&gt;One&lt;/body&gt;&lt;/html&gt;]</body></html>>\n\nThis problem was originating from the line of code:\n```java\ntb.insert(startTag);\n```\n\nThe line of code above was meant to insert a start tag into the HTML tree builder. However, the insertion was done before transitioning the tokeniser into Rawtext state, and before marking the insertion mode and transitioning into Text state.\n\nBuggy Code:\n```java\nprivate static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n    tb.insert(startTag);\n    tb.tokeniser.transition(TokeniserState.Rawtext);\n    tb.markInsertionMode();\n    tb.transition(Text);\n}\n```\n\nSolution:\nTo fix this bug, the insertion of the start tag should occur after the tokeniser is transitioned into Rawtext state, and after marking the insertion mode and transitioning into Text state. This way, the HTML tags are properly interpreted and parsed in the HTML text.\n\nFixed Code:\n```java\nprivate static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n    tb.tokeniser.transition(TokeniserState.Rawtext);\n    tb.markInsertionMode();\n    tb.transition(Text);\n    tb.insert(startTag);\n}\n```\n\nHence, this bug report suggests an issue with logic ordering rather than syntax, which once corrected, allows the Jsoup parser to correctly interpret and parse HTML input."
}