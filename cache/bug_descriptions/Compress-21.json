{
    "bug_id": 21,
    "bug_type": "SF",
    "buggy_lines": "            --shift;\n            if (shift == 0) {\n        if (length > 0 && shift > 0) {",
    "code": "    private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {\n        int cache = 0;\n        int shift = 7;\n        for (int i = 0; i < length; i++) {\n            cache |= ((bits.get(i) ? 1 : 0) << shift);\n            --shift;\n            if (shift == 0) {\n                header.write(cache);\n                shift = 7;\n                cache = 0;\n            }\n        }\n        if (length > 0 && shift > 0) {\n            header.write(cache);\n        }\n    }",
    "fixed_code": "    private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {\n        int cache = 0;\n        int shift = 7;\n        for (int i = 0; i < length; i++) {\n            cache |= ((bits.get(i) ? 1 : 0) << shift);\n            if (--shift < 0) {\n                header.write(cache);\n                shift = 7;\n                cache = 0;\n            }\n        }\n        if (shift != 7) {\n            header.write(cache);\n        }\n    }",
    "fixed_lines": "            if (--shift < 0) {\n        if (shift != 7) {",
    "masked_code": "    private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {\n        int cache = 0;\n        int shift = 7;\n        for (int i = 0; i < length; i++) {\n            cache |= ((bits.get(i) ? 1 : 0) << shift);\n                header.write(cache);\n                shift = 7;\n                cache = 0;\n            }\n        }\n>>> [ INFILL ] <<<\n            header.write(cache);\n        }\n    }",
    "project": "Compress",
    "test_error_message": "java.io.IOException: Unknown property 128",
    "test_framework": "defects4j",
    "test_line": "        SevenZFile archive = new SevenZFile(output);",
    "test_name": "testSevenEmptyFiles",
    "test_suite": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
    "time_buggy": "2013-12-20 05:16:56 +0000",
    "time_fixed": "2013-12-20 12:13:11 +0000",
    "bug_description": "Bug ID: 21\nBug Type: Semantic Fault (SF)\n\nProject: Compress\n\n1. Summary: \nThe bug is of type semantic fault which is causing a java.io.IOException saying \"Unknown property 128\". The bug arises due to the improper check condition in the for loop and if statement inside the method \"writeBits\" of the \"Compress\" project.\n\n2. Description:\n\n   In the \"writeBits\" method, the values from a BitSet are being written into a data output stream, with some bit shifting operations. Issues occur when writing the remaining bits if bits length does not align with byte size of 8.\n\n   The issue seems to be rooted in an improper check in the if statement where it checks --shift == 0, then tries to write to header and resets shift to 7 and cache to 0. However if length of bits is 7, we end up putting seven bits in cache but we never reach the point where shift becomes 0. Hence header.write for these cases does not happen causing IOException. There is also a similar issue with the final if check outside the loop where it checks for length > 0 and shift > 0 to confirm leftover bits.\n\n3. Steps to reproduce:\n\n    To reproduce this issue, simply try writing bits to a header using the buggy code with a situation where the length of bits is not a multiple of 8. This should cause the issue, leading to a IOException.\n\n4. Suggested Fix (Provided in Issue):\n\n   The fixed code provides a logical solution to this issue by allowing to check if shift becomes less than 0 instead of 0 within the loop. This modified condition allows us to catch the last iteration where we have leftover bits in cache and write them properly. Similar modification occurs in the final if statement where we now check if shift is not equal to 7 to confirm if there are any leftover bits and then write the leftover data.\n\n5. Code changes:\n\nOld code:\n```java\n--shift;\nif (shift == 0) {\n```\nFixed code:\n```java\nif (--shift < 0) {\n```\nAnd,\n\nOld code:\n```java\nif (length > 0 && shift > 0) {\n```\nFixed code:\n```java\nif (shift != 7) {\n```\n\n6. Other information:\n\n   There doesn\u2019t seem to be need for additional information about this bug. It\u2019s a simple logical error in the check conditions that was causing the code to fail in certain circumstances."
}