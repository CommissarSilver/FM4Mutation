{
    "bug_id": 85,
    "bug_type": "SL SH SF",
    "buggy_lines": "        if (fa * fb >= 0.0 ) {",
    "code": "    public static double[] bracket(UnivariateRealFunction function,\n            double initial, double lowerBound, double upperBound, \n            int maximumIterations) throws ConvergenceException, \n            FunctionEvaluationException {\n        \n        if (function == null) {\n            throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n        }\n        if (maximumIterations <= 0)  {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"bad value for maximum iterations number: {0}\", maximumIterations);\n        }\n        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n                  lowerBound, initial, upperBound);\n        }\n        double a = initial;\n        double b = initial;\n        double fa;\n        double fb;\n        int numIterations = 0 ;\n    \n        do {\n            a = Math.max(a - 1.0, lowerBound);\n            b = Math.min(b + 1.0, upperBound);\n            fa = function.value(a);\n            \n            fb = function.value(b);\n            numIterations++ ;\n        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n                ((a > lowerBound) || (b < upperBound)));\n   \n        if (fa * fb >= 0.0 ) {\n            throw new ConvergenceException(\n                      \"number of iterations={0}, maximum iterations={1}, \" +\n                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n                      numIterations, maximumIterations, initial,\n                      lowerBound, upperBound, a, b, fa, fb);\n        }\n        \n        return new double[]{a, b};\n    }",
    "fixed_code": "    public static double[] bracket(UnivariateRealFunction function,\n            double initial, double lowerBound, double upperBound, \n            int maximumIterations) throws ConvergenceException, \n            FunctionEvaluationException {\n        \n        if (function == null) {\n            throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n        }\n        if (maximumIterations <= 0)  {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"bad value for maximum iterations number: {0}\", maximumIterations);\n        }\n        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n                  lowerBound, initial, upperBound);\n        }\n        double a = initial;\n        double b = initial;\n        double fa;\n        double fb;\n        int numIterations = 0 ;\n    \n        do {\n            a = Math.max(a - 1.0, lowerBound);\n            b = Math.min(b + 1.0, upperBound);\n            fa = function.value(a);\n            \n            fb = function.value(b);\n            numIterations++ ;\n        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n                ((a > lowerBound) || (b < upperBound)));\n   \n        if (fa * fb > 0.0 ) {\n            throw new ConvergenceException(\n                      \"number of iterations={0}, maximum iterations={1}, \" +\n                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n                      numIterations, maximumIterations, initial,\n                      lowerBound, upperBound, a, b, fa, fb);\n        }\n        \n        return new double[]{a, b};\n    }",
    "fixed_lines": "        if (fa * fb > 0.0 ) {",
    "masked_code": "    public static double[] bracket(UnivariateRealFunction function,\n            double initial, double lowerBound, double upperBound, \n            int maximumIterations) throws ConvergenceException, \n            FunctionEvaluationException {\n        \n        if (function == null) {\n            throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n        }\n        if (maximumIterations <= 0)  {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"bad value for maximum iterations number: {0}\", maximumIterations);\n        }\n        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n            throw MathRuntimeException.createIllegalArgumentException(\n                  \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n                  lowerBound, initial, upperBound);\n        }\n        double a = initial;\n        double b = initial;\n        double fa;\n        double fb;\n        int numIterations = 0 ;\n    \n        do {\n            a = Math.max(a - 1.0, lowerBound);\n            b = Math.min(b + 1.0, upperBound);\n            fa = function.value(a);\n            \n            fb = function.value(b);\n            numIterations++ ;\n        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n                ((a > lowerBound) || (b < upperBound)));\n   \n>>> [ INFILL ] <<<\n            throw new ConvergenceException(\n                      \"number of iterations={0}, maximum iterations={1}, \" +\n                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n                      numIterations, maximumIterations, initial,\n                      lowerBound, upperBound, a, b, fa, fb);\n        }\n        \n        return new double[]{a, b};\n    }",
    "project": "Math",
    "test_error_message": "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0",
    "test_framework": "defects4j",
    "test_line": "        double result = normal.inverseCumulativeProbability(0.9772498680518209);",
    "test_name": "testMath280",
    "test_suite": "org.apache.commons.math.distribution.NormalDistributionTest",
    "time_buggy": "2009-07-07 07:57:37 +0000",
    "time_fixed": "2009-07-07 09:19:46 +0000",
    "bug_description": "Bug Description:\n\nTitle: Logic error occurs in the bracket function of Math project leading to ConvergenceException\n\nDetails:\n\nThe bug 85 is identified in the 'bracket' method of 'Math' project. The encountered bug falls under 'SL SH SF' category. \n\nIn the existing code, there is a loop that updates the value of 'a' and 'b' which are initialized as 'initial'. 'a' is decreased by 1.0 until it matches the 'lowerBound' while 'b' is increased by 1.0 until it matches the 'upperBound'. After each update, 'fa' and 'fb' values are calculated by passing 'a' and 'b' to a function. Iterations continue while the product of 'fa' and 'fb' is greater than 0.0, the iteration count is less than the maximum iterations, and the values of 'a' and 'b' are respectively greater than the lowerBound and less than the upperBound.\n\nThe bug occurs after the loop, there is a condition to check if the product of 'fa' and 'fb' is greater than or equal to 0.0. If true, a 'ConvergenceException' is thrown. However, this does not properly handle the scenario when 'fa' and 'fb' values might exactly be 0. This causes the incorrect error message and subsequent 'ConvergenceException'.\n\nSteps to reproduce:\n1. Call the 'bracket' function of the Math class with appropriate inputs.\n2. The 'initial' value should be set in such a way that one of the values 'a' or 'b' equals the 'lowerBound' or 'upperBound' respectively upon iterating.\n3. If this state is reached and the product of 'fa' and 'fb' is 0.0, it will cause the program to incorrectly raise a ConvergenceException error. \n\nThe bug is fixed in the suggested code by changing the if-condition from \"if (fa * fb >= 0.0 )\" to \"if (fa * fb > 0.0 )\". This allows for situations when 'fa' and 'fb' values might exactly be 0, thus avoiding an incorrect ConvergenceException. \n\nThis change will ensure that the function works as expected and does not falsely raise a ConvergenceException when 'fa' and 'fb' product equals 0.0. \n\nConclusion:\n\nThis bug represents a logical error which, if not addressed, could fail to handle corner case in the 'bracket' function, thereby leading to incorrect ConvergenceExceptions. Making the necessary correction ensures more accurate performance of the 'bracket' method within the 'Math' project."
}