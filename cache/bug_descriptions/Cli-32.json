{
    "bug_id": 32,
    "bug_type": "SH SF",
    "buggy_lines": "        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))\n        {\n            ++pos;\n        }        ",
    "code": "    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int pos;\n        \n        // the line ends before the max wrap pos or a new line char found\n        if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))\n        {\n            return pos + 1;\n        }\n        else if (startPos + width >= text.length())\n        {\n            return -1;\n        }\n\n\n        // look for the last whitespace character before startPos+width\n        pos = startPos + width;\n\n        char c;\n\n        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))\n        {\n            --pos;\n        }\n\n        // if we found it - just return\n        if (pos > startPos)\n        {\n            return pos;\n        }\n        \n        // if we didn't find one, simply chop at startPos+width\n        pos = startPos + width;\n        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')\n               && (c != '\\n') && (c != '\\r'))\n        {\n            ++pos;\n        }        \n        return pos == text.length() ? -1 : pos;\n    }",
    "fixed_code": "    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int pos;\n        \n        // the line ends before the max wrap pos or a new line char found\n        if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))\n        {\n            return pos + 1;\n        }\n        else if (startPos + width >= text.length())\n        {\n            return -1;\n        }\n\n\n        // look for the last whitespace character before startPos+width\n        pos = startPos + width;\n\n        char c;\n\n        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))\n        {\n            --pos;\n        }\n\n        // if we found it - just return\n        if (pos > startPos)\n        {\n            return pos;\n        }\n        \n        // if we didn't find one, simply chop at startPos+width\n        pos = startPos + width;\n        \n        return pos == text.length() ? -1 : pos;\n    }",
    "fixed_lines": "        ",
    "masked_code": "    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int pos;\n        \n        // the line ends before the max wrap pos or a new line char found\n        if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))\n        {\n            return pos + 1;\n        }\n        else if (startPos + width >= text.length())\n        {\n            return -1;\n        }\n\n\n        // look for the last whitespace character before startPos+width\n        pos = startPos + width;\n\n        char c;\n\n        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))\n        {\n            --pos;\n        }\n\n        // if we found it - just return\n        if (pos > startPos)\n        {\n            return pos;\n        }\n        \n        // if we didn't find one, simply chop at startPos+width\n        pos = startPos + width;\n>>> [ INFILL ] <<<\n        return pos == text.length() ? -1 : pos;\n    }",
    "project": "Cli",
    "test_error_message": "java.lang.StringIndexOutOfBoundsException: String index out of range: 12",
    "test_framework": "defects4j",
    "test_line": "        new HelpFormatter().renderWrappedText(sb, width, padding, text);",
    "test_name": "testRenderWrappedTextWordCut",
    "test_suite": "org.apache.commons.cli.HelpFormatterTest",
    "time_buggy": "2010-07-07 12:55:18 +0000",
    "time_fixed": "2010-07-07 13:48:12 +0000",
    "bug_description": "1. Bug ID: Each bug when reported is given a unique identifier. In this case, the bug ID is 32. \n\n2. Project: This refers to the overall project or module in which the bug was found, in this case the project name is \"Cli\".\n\n3. Bug Type: The reported bug type is \"SH SF\". SH and SF stand for Shell and Scripting Failures respectively. This type of bug might include errors pertaining to shell scripts. But in this context, it appears to be a mislabel as the bug seems to be a Java exception.\n\n4. Test Error Message: The bug causes a \"java.lang.StringIndexOutOfBoundsException: String index out of range: 12\" error which occurs when a string is being accessed at an index out of its range.\n\n5. Buggy Lines: The error in the code is a direct result of the 'while' loop in which the developed function tries to access a character at a position of the string which is not within the bounds of that string. \n\n6. Actual Bug: The bug arises in the implementation of the 'findWrapPos' function, which is designed to find the position at which to wrap text at given width. Specifically, the part of the function that attempts to check for a space, newline, or carriage return character beyond the end of the string, results in a StringIndexOutOfBoundsException.\n\n7. The erroneous loop tries to access characters beyond the string length, leading to 'String index out of range' error. This is reflected in the error message.\n\n8. The Bug was fixed by removing the 'while' loop that moved the position 'pos' beyond the length of the text. Instead, the fixed code simply returns '-1' if 'pos' is equal to text length, avoiding any out of bounds error."
}