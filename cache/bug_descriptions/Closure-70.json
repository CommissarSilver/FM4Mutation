{
    "bug_id": 70,
    "bug_type": "SL SH SF",
    "buggy_lines": "                  jsDocParameter.getJSType(), true);",
    "code": "    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            if (jsDocParameter != null) {\n              defineSlot(astParameter, functionNode,\n                  jsDocParameter.getJSType(), true);\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "fixed_code": "    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            if (jsDocParameter != null) {\n              defineSlot(astParameter, functionNode,\n                  jsDocParameter.getJSType(), false);\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "fixed_lines": "                  jsDocParameter.getJSType(), false);",
    "masked_code": "    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            if (jsDocParameter != null) {\n              defineSlot(astParameter, functionNode,\n>>> [ INFILL ] <<<\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "project": "Closure",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<2> but was:<1>",
    "test_framework": "defects4j",
    "test_line": "      assertEquals(descriptions.size(), compiler.getWarningCount());",
    "test_name": "testDuplicateLocalVarDecl",
    "test_suite": "com.google.javascript.jscomp.LooseTypeCheckTest",
    "time_buggy": "2011-05-20 18:10:48 +0000",
    "time_fixed": "2011-05-20 19:48:47 +0000",
    "bug_description": "Bug Description:\n\n1. ID: The bug has an ID of 70 in the system.\n   \n2. Project: The bug exists in the project named 'Closure'.\n\n3. Type: The bug type is categorized as SL SH SF, implying that it\u2019s a kind of software bug with particular characterizations.\n\n4. Error Message: The error message produced during the unit test was junit.framework.AssertionFailedError: expected:<2> but was:<1>, indicating that a unit test failed due to an assertion failing - the code produced a value of 1 when a value of 2 was expected.\n\n5. Buggy Code: The bug is in the Function 'declareArguments', specifically in the method 'defineSlot'. Here, a boolean value (true) is passed to this function as an argument. \n\n6. Location: The line that produces the bug is found in the loop of the 'declareArguments' function, more precisely in the method 'defineSlot'.\n\n      jsDocParameter.getJSType(), true);\n\n7. Description: The reported error appears to stem from the method 'defineSlot', where 'true' is passed as the last argument.\n\n8. Fix: The fix for the bug was changing the hard-coded 'true' argument to 'false' in the call to defineSlot() when jsDocParameter is not null, as per the given Fixed Code. \n\n      defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false); \n\nThis detailed description suggests that the bug was improperly declaring arguments due to a hardcoded boolean value, which was resolved by changing it. Developers trying to recreate this bug would insert an incorrect boolean value as an argument in a similar code setup."
}