{
    "bug_id": 57,
    "bug_type": "SL SH SF",
    "buggy_lines": "                attributes.remove(attrKey);",
    "code": "    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {\n            String attrKey = it.next();\n            if (attrKey.equalsIgnoreCase(key))\n                attributes.remove(attrKey);\n        }\n    }",
    "fixed_code": "    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {\n            String attrKey = it.next();\n            if (attrKey.equalsIgnoreCase(key))\n                it.remove();\n        }\n    }",
    "fixed_lines": "                it.remove();",
    "masked_code": "    public void removeIgnoreCase(String key) {\n        Validate.notEmpty(key);\n        if (attributes == null)\n            return;\n        for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {\n            String attrKey = it.next();\n            if (attrKey.equalsIgnoreCase(key))\n>>> [ INFILL ] <<<\n        }\n    }",
    "project": "Jsoup",
    "test_error_message": "java.util.ConcurrentModificationException",
    "test_framework": "defects4j",
    "test_line": "        a",
    "test_name": "testChainedRemoveAttributes",
    "test_suite": "org.jsoup.nodes.ElementTest",
    "time_buggy": "2016-10-24 18:01:41 -0700",
    "time_fixed": "2016-10-26 12:58:24 -0700",
    "bug_description": "Bug Description:\n\nBug ID: 57\nProject: Jsoup\nBug Type: SL SH SF (Statement List, Statement Handling, Statement Function)\n\n\nBackground: \nThis bug is associated with the Jsoup project. Jsoup is a Java library used for working with real-world HTML and provides API for extracting and manipulating data, using DOM, CSS, and jquery-like methods.\n\nError: \nThe reported error message is a ConcurrentModificationException. This type of exception is thrown by methods that have detected concurrent modification of an object when it is not permissible to do so.\n\nAffected Code:\nThe affected code is found under the method `removeIgnoreCase(String key)`. Here, while iterating through the list of attributes associated with a particular key, the program attempts to remove an attribute if it equals (ignoring case) the specified key.\n\nBuggy Line: `attributes.remove(attrKey);`\n\nExplanation: \nThe source of the problem is the use of `attributes.remove(attrKey);` inside the loop. While iterating the list, removing an element directly from the list without the iterator's awareness causes a `ConcurrentModificationException`. This is because the list is modified while iterating through it, which is not allowed.\n\nSolution:\nReplacing `attributes.remove(attrKey);` with `it.remove();` solves the problem. The `remove()` function of an `Iterator` safely removes the current element from the list, and the iterator is aware of this change. \n\nFixed Line: `it.remove();`\n\nFixed Code:\nIn the fixed code, the attribute is removed by the iterator itself if its key equals (in a case-insensitive way) the provided key. This prevents the `ConcurrentModificationException`.\n\nSteps to generate similar artificial bugs: \n\n1. Write a simple java program where you are trying to modify a Collection while iterating it concurrently.\n2. Perform changes (like add, remove) directly on the collection instead of using iterator methods.\n3. Make sure to perform these changes while you're still in the middle of the iteration.\n4. Not handling these modifications within the iterator will cause a ConcurrentModificationException error, thus creating a similar bug. \n\nNote: This is a common error when working with Java Collections, and understanding how iterators work is key to avoid it."
}