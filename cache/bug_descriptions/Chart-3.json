{
    "bug_id": 3,
    "bug_type": "SH SF",
    "buggy_lines": "",
    "code": "    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return copy;\n    }",
    "fixed_code": "    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return copy;\n    }",
    "fixed_lines": "        copy.minY = Double.NaN;\n        copy.maxY = Double.NaN;",
    "masked_code": "    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n>>> [ INFILL ] <<<\n        copy.data = new java.util.ArrayList();\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                }\n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return copy;\n    }",
    "project": "Chart",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<101.0> but was:<102.0>",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(101.0, s2.getMaxY(), EPSILON);",
    "test_name": "testCreateCopy3",
    "test_suite": "org.jfree.data.time.junit.TimeSeriesTests",
    "time_buggy": "2009-08-31 11:45:26 -0700 ",
    "time_fixed": "2009-08-31 13:54:18 -0700 ",
    "bug_description": "Bug ID: 3\nProject: Chart\nBug Type: Serious Harm (SH), Simple Fix (SF)\nTest Error Message: junit.framework.AssertionFailedError: expected:<101.0> but was:<102.0>\n\nDescription:\n\nThe bug is located in the \"createCopy\" method of the \"TimeSeries\" class in the \"Chart\" project. The \"createCopy\" method is expected to create an exact copy of the time series object. However, the bug causes a discrepancy in the replicated object.\n\nIn the faulty code, when the \"createCopy()\" method is called, it will clone the original \"TimeSeries\" object, but the minimum and maximum 'Y' values of the original dataset aren't explicitly set for the cloned object. This happens because the clone() method only replicates the object's state, and the minY and maxY values are not reset, causing a miscalculation when the data values are recalculated.\n\nSteps to reproduce:\n\n1. Create a \"TimeSeries\" object with several data items.\n2. Invoke the \"createCopy()\" method passing the start and end index of data items which need to be copied.\n3. Check the minY and maxY values of the copied object.\n\nExpected Result:\n\nThe copied object should have the same minY and maxY values as the original object when the same data values are considered.\n\nActual Result:\n\nThe copied object has different minY and maxY values than expected, causing an assertion failure in the testing phase with a junit.framework.AssertionFailedError where it was expected a value of <101.0> but got a <102.0>.\n\nFix:\n\nThe fixed code handles this error by initially setting the minY and maxY of the \"copy\" object to \"Double.NaN\". Then during the process of adding data items, the TimeSeries class recalculates the correct minY and maxY for the copied object. This ensures that the copied object properly reflects the state of the original object. The addition of these two lines of code resolves the bug and makes the function work as intended."
}