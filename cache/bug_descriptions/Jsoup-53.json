{
    "bug_id": 53,
    "bug_type": "SF",
    "buggy_lines": "",
    "code": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            if (last == 0 || last != ESC) {\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos;\n                }\n                else if (c.equals(close))\n                    depth--;\n            }\n\n            if (depth > 0 && last != 0)\n                end = pos; // don't include the outer match pair in the return\n            last = c;\n        } while (depth > 0);\n        return (end >= 0) ? queue.substring(start, end) : \"\";\n    }",
    "fixed_code": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n        boolean inQuote = false;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            if (last == 0 || last != ESC) {\n                if (c.equals('\\'') || c.equals('\"') && c != open)\n                    inQuote = !inQuote;\n                if (inQuote)\n                    continue;\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos;\n                }\n                else if (c.equals(close))\n                    depth--;\n            }\n\n            if (depth > 0 && last != 0)\n                end = pos; // don't include the outer match pair in the return\n            last = c;\n        } while (depth > 0);\n        return (end >= 0) ? queue.substring(start, end) : \"\";\n    }",
    "fixed_lines": "        boolean inQuote = false;\n                if (c.equals('\\'') || c.equals('\"') && c != open)\n                    inQuote = !inQuote;\n                if (inQuote)\n                    continue;",
    "masked_code": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            if (last == 0 || last != ESC) {\n>>> [ INFILL ] <<<\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos;\n                }\n                else if (c.equals(close))\n                    depth--;\n            }\n\n            if (depth > 0 && last != 0)\n                end = pos; // don't include the outer match pair in the return\n            last = c;\n        } while (depth > 0);\n        return (end >= 0) ? queue.substring(start, end) : \"\";\n    }",
    "project": "Jsoup",
    "test_error_message": "org.jsoup.select.Selector$SelectorParseException: Could not parse query 'div[data='End]'': unexpected token at '''",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(\"One\", doc.select(\"div[data='End]'\").first().text());",
    "test_name": "attributeWithBrackets",
    "test_suite": "org.jsoup.select.SelectorTest",
    "time_buggy": "2016-05-07 16:18:24 -0700",
    "time_fixed": "2016-05-07 17:18:58 -0700",
    "bug_description": "Bug ID: 53\nProject: Jsoup\nBug Type: SF (Syntax/Compilation Failure)\n\nDescription:\n\nThis bug is related to the 'chompBalanced' method from the Jsoup project. The issue was observed when parsing particular queries containing single quotes, which was resulting in the 'org.jsoup.select.Selector$SelectorParseException' error message. This indicates that there was an unexpected character or token in the provided query string.\n\nSpecifically, the bug can be introduced if the following steps are performed:\n\n1. Start of User Input - The user attempts to parse a query containing a name attribute and single quotes, e.g. 'div[data='End']'. The single quotes marks the start and end of attribute value. Here, 'End' is a value of the 'data' attribute.\n\n2. Input Processing - The method 'chompBalanced' is triggered to parse and balance the opening and closing characters in the query. The problem arises due to the absence of handling for quote characters (single or double quotes) in the original code.\n\n3. Error Message - Due to this, the method unintentionally considers the single quote as part of the query, resulting in an unexpected token and throwing a SelectorParseException error.\n\nThe error can be fixed by modifying the 'chompBalanced' method like so:\n\n1. Add a 'inQuote' flag to indicate whether the current character is within quotes or not.\n2. If the current character is a quote (single or double) and is not the opening character in the pair, toggle the 'inQuote' flag.\n3. If 'inQuote' is true, skip the current iteration to ignore characters within quotes.\n4. Now, if the current character is the opening character, increase the depth and set the starting position.\n5. If the current character is the closing character, decrease the depth.\n6. If last and depth are non-zero, set the current position as the end.\n\nThis will properly handle and ignore characters enclosed by quotes, preventing the Syntax failure bug by correctly parsing and processing such query scenarios."
}