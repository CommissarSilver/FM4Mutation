{
    "bug_id": 86,
    "bug_type": "SL SH SF",
    "buggy_lines": "        if (doc.childNodeSize() > 0) {",
    "code": "    public XmlDeclaration asXmlDeclaration() {\n        String data = getData();\n        Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri(), Parser.xmlParser());\n        XmlDeclaration decl = null;\n        if (doc.childNodeSize() > 0) {\n            Element el = doc.child(0);\n            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            decl.attributes().addAll(el.attributes());\n        }\n        return decl;\n    }",
    "fixed_code": "    public XmlDeclaration asXmlDeclaration() {\n        String data = getData();\n        Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri(), Parser.xmlParser());\n        XmlDeclaration decl = null;\n        if (doc.children().size() > 0) {\n            Element el = doc.child(0);\n            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            decl.attributes().addAll(el.attributes());\n        }\n        return decl;\n    }",
    "fixed_lines": "        if (doc.children().size() > 0) {",
    "masked_code": "    public XmlDeclaration asXmlDeclaration() {\n        String data = getData();\n        Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri(), Parser.xmlParser());\n        XmlDeclaration decl = null;\n>>> [ INFILL ] <<<\n            Element el = doc.child(0);\n            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n            decl.attributes().addAll(el.attributes());\n        }\n        return decl;\n    }",
    "project": "Jsoup",
    "test_error_message": "java.lang.IndexOutOfBoundsException: Index: 0, Size: 0",
    "test_framework": "defects4j",
    "test_line": "        Document doc = Jsoup.parse(html, \"\", Parser.xmlParser());",
    "test_name": "handlesLTinScript",
    "test_suite": "org.jsoup.parser.XmlTreeBuilderTest",
    "time_buggy": "2018-12-22 17:59:13 -0800",
    "time_fixed": "2018-12-22 18:19:31 -0800",
    "bug_description": "Bug Description:\n\nBug ID: 86\n\nBug Title: SL SH SF bug type causing java.lang.IndexOutOfBoundsException in project Jsoup \n\nSteps to Reproduce:\n1. The \"asXmlDeclaration()\" method is called.\n2. The method attempts to parse an XML declaration, creating a new Document object \"doc\" as a result.\n3. Then it tries to check if the size of child nodes of the document object \"doc\" is greater than 0, calling the method \"childNodeSize()\".\n4. If the size of child nodes is indeed bigger than 0, the method tries to retrieve the first child node of \"doc\".\n\nExpected Behavior: \nThe Document object \"doc\" should have at least one child node that can be retrieved and manipulated without problems.\n\nObserved Behavior:\nAn IndexOutOfBoundsException error is thrown when the method child(0) is called, this indicates that the list of child nodes is empty even when the \"childNodeSize() > 0\" condition is checked previously.\n\nBuggy Code:\n```\n    if (doc.childNodeSize() > 0) {\n        Element el = doc.child(0);\n        ...\n    }\n    ...\n```\n\nRoot Cause:\nThe method childNodeSize() returns a number larger than 0, but when trying to access the first child node (child(0)), an IndexOutOfBoundsException error is thrown. This suggests that the childNodeSize() method may not be accurately reflecting the actual size of child nodes.\n\nFix:\nIn the corrected code the size evaluation and retrieval of children nodes were corrected to use the \"children()\" method instead of \"childNodeSize()\" and \"child()\". Now the check is being made on \"doc.children().size() > 0\", which accurately reflects the number of child Element objects within the Document object \"doc\", thus preventing IndexOutOfBoundsException to be thrown.\n\nFixed Code:\n```\n    if (doc.children().size() > 0) {\n        Element el = doc.child(0);\n        ...\n    }\n    ...\n```"
}