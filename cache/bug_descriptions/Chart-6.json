{
    "bug_id": 6,
    "bug_type": "SH SF",
    "buggy_lines": "        return super.equals(obj);",
    "code": "    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        return super.equals(obj);\n\n    }",
    "fixed_code": "    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n        ShapeList that = (ShapeList) obj;\n        int listSize = size();\n        for (int i = 0; i < listSize; i++) {\n           if (!ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))) {\n               return false;\n           }\n        }\n        return true;\n\n    }",
    "fixed_lines": "        ShapeList that = (ShapeList) obj;\n        int listSize = size();\n        for (int i = 0; i < listSize; i++) {\n           if (!ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))) {\n               return false;\n           }\n        }\n        return true;",
    "masked_code": "    public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ShapeList)) {\n            return false;\n        }\n>>> [ INFILL ] <<<\n\n    }",
    "project": "Chart",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<org.jfree.chart.util.ShapeList@1c700507> but was:<org.jfree.chart.util.ShapeList@b372e882>",
    "test_framework": "defects4j",
    "test_line": "        assertEquals(l1, l2);",
    "test_name": "testSerialization",
    "test_suite": "org.jfree.chart.util.junit.ShapeListTests",
    "time_buggy": "2008-06-17 01:35:56 -0700 ",
    "time_fixed": "2008-06-17 01:44:13 -0700 ",
    "bug_description": "Bug ID: 6\nProject: Chart\nBug Type: Semantic and Syntactic Fault (SH SF)\n\nDescription:\n\nThe bug is indicated to be in the equals method of a class, specifically related to comparing two instances of the ShapeList class. Our detected error is derived from the original method's lack of appropriate logic to compare whether two ShapeList objects are equal.\n\nThe observed error message shows that an assertion failed when comparing two instances of the ShapeList class. This indicates that the two objects, although expected to be the same based on the test case, were not deemed to be so by the equals method. This caused the test to fail.\n\nSteps to trigger the bug:\n\n1. Two instances of the ShapeList class are created and filled with similar objects. Both instances should technically be regarded as similar (i.e., equal) under the expected object comparison rules.\n2. The equals method is called to verify if the two created ShapeList instances are the same. The method returns 'false', indicating that the instances are not the same.\n3. Further investigation with JUnit test cases shows that the equals method does not correctly compare the two ShapeList objects, leading to a false outcome and failed test case.\n\nBug triggering code:\n    \n    ShapeList shapeList1 = new ShapeList();\n    ShapeList shapeList2 = new ShapeList();\n    // Add similar shapes to both lists\n    assertTrue(shapeList1.equals(shapeList2)); // Fails due to incorrect implementation of equals method.\n   \nThe issue lies in the equals method as it returns super.equals(obj), which does not adequately check the equality of two ShapeList objects, considering the list's contents.\n\nThe bug was fixed by revising the equals method to compare each element of the ShapeList instances. This way, if the two ShapeList instances have the same elements in the same order, they will be regarded as equal. Otherwise, they are not. The fixed code introduces a loop that traverses the ShapeList and checks the equality of individual Shape objects using the ShapeUtilities equal method. The revised equals method returns 'true' only if all of the corresponding pairs of elements in the two lists are equal.\n\nThe fixed version of the equals method ensures that the comparison is done correctly, resulting in the assertion passing for equal ShapeList instances."
}