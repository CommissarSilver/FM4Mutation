{
    "bug_id": 80,
    "bug_type": "SL SH SF",
    "buggy_lines": "            int j = 4 * n - 1;",
    "code": "    private boolean flipIfWarranted(final int n, final int step) {\n        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {\n            // flip array\n            int j = 4 * n - 1;\n            for (int i = 0; i < j; i += 4) {\n                for (int k = 0; k < 4; k += step) {\n                    final double tmp = work[i + k];\n                    work[i + k] = work[j - k];\n                    work[j - k] = tmp;\n                }\n                j -= 4;\n            }\n            return true;\n        }\n        return false;\n    }",
    "fixed_code": "    private boolean flipIfWarranted(final int n, final int step) {\n        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {\n            // flip array\n            int j = 4 * (n - 1);\n            for (int i = 0; i < j; i += 4) {\n                for (int k = 0; k < 4; k += step) {\n                    final double tmp = work[i + k];\n                    work[i + k] = work[j - k];\n                    work[j - k] = tmp;\n                }\n                j -= 4;\n            }\n            return true;\n        }\n        return false;\n    }",
    "fixed_lines": "            int j = 4 * (n - 1);",
    "masked_code": "    private boolean flipIfWarranted(final int n, final int step) {\n        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {\n            // flip array\n>>> [ INFILL ] <<<\n            for (int i = 0; i < j; i += 4) {\n                for (int k = 0; k < 4; k += step) {\n                    final double tmp = work[i + k];\n                    work[i + k] = work[j - k];\n                    work[j - k] = tmp;\n                }\n                j -= 4;\n            }\n            return true;\n        }\n        return false;\n    }",
    "project": "Math",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<16828.208208485466> but was:<20654.74511575945>",
    "test_framework": "defects4j",
    "test_line": "            assertEquals(refEigenValues[i], eigenValues[i], 1.0e-3);",
    "test_name": "testMathpbx02",
    "test_suite": "org.apache.commons.math.linear.EigenDecompositionImplTest",
    "time_buggy": "2009-11-03 22:04:08 +0000",
    "time_fixed": "2009-11-06 15:11:57 +0000",
    "bug_description": "Bug Description:\n\nBug ID: #80 \n\nLocation: Math \n\nBug Type: SLSH SF (Software Life cycle, Software History, Software Features)\n\nSteps to reproduce the bug:\n\nStep 1: Run the Math module and navigate to the function \"flipIfWarranted.\"\nStep 2: Input an integer \"n\" and \"step\" into the \"flipIfWarranted\" function.\nStep 3: The function should output a boolean telling whether the array was flipped or not. However, due to the bug, the function was not working as expected and was leading to a test error.\n\nBuggy Line of Code:\n\nIn the code, the buggy line is \"int j = 4 * n - 1;\". The bug here is that \"j\" is being initialised to \"4*n - 1\" which is one digit higher than it should be.\n\nObserved Result:\n\nThe test fails as junit.framework.AssertionFailedError is thrown during the unit testing. This error shows a discrepancy between the expected output of \"16828.208208485466\" and the actual output of \"20654.74511575945,\" thus demonstrating a clear issue in the functionality of the code block \n\nRoot Cause Analysis:\n\nThe bug is mainly due to the miscomputation in the initialisation of the variable \"j\" which is used in a loop for the array manipulation in the function \"flipIfWarranted.\" It is set as \"4*n - 1,\" which leads to an incorrect calculation and impacts the apk functionality, causing the test error.\n\nFix:\n\nThe bug was fixed by correctly setting the initial value of the variable \"j\" as \"4 *(n - 1)\" instead of \"4 * n - 1.\" This modification ensures that the loop runs correctly and does not cause any discrepancies in the computation leading to the error.\n\nFixed Code:\n\nIn the fixed code, the line \"int j = 4 * (n - 1);\" correctly initializes the value of \"j\" for the array manipulation, ensuring the correct execution of the function and passing of the test.\n\nSummary:\n\nThis bug was a calculation error that caused an AssertionFailedError during unit testing. It was rooted in the incorrect calculation caused by the wrong initialisation of a variable used in an array manipulative function. It was fixed by correcting the variable's initialisation."
}