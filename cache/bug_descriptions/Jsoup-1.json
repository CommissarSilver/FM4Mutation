{
    "bug_id": 1,
    "bug_type": "SH SF",
    "buggy_lines": "            body().appendChild(new TextNode(\" \", \"\"));\n            body().appendChild(node);",
    "code": "    private void normalise(Element element) {\n        List<Node> toMove = new ArrayList<Node>();\n        for (Node node: element.childNodes) {\n            if (node instanceof TextNode) {\n                TextNode tn = (TextNode) node;\n                if (!tn.isBlank())\n                    toMove.add(tn);\n            }\n        }\n\n        for (Node node: toMove) {\n            element.removeChild(node);\n            body().appendChild(new TextNode(\" \", \"\"));\n            body().appendChild(node);\n        }\n    }",
    "fixed_code": "    private void normalise(Element element) {\n        List<Node> toMove = new ArrayList<Node>();\n        for (Node node: element.childNodes) {\n            if (node instanceof TextNode) {\n                TextNode tn = (TextNode) node;\n                if (!tn.isBlank())\n                    toMove.add(tn);\n            }\n        }\n\n        for (Node node: toMove) {\n            element.removeChild(node);\n            body().prependChild(node);\n            body().prependChild(new TextNode(\" \", \"\"));\n        }\n    }",
    "fixed_lines": "            body().prependChild(node);\n            body().prependChild(new TextNode(\" \", \"\"));",
    "masked_code": "    private void normalise(Element element) {\n        List<Node> toMove = new ArrayList<Node>();\n        for (Node node: element.childNodes) {\n            if (node instanceof TextNode) {\n                TextNode tn = (TextNode) node;\n                if (!tn.isBlank())\n                    toMove.add(tn);\n            }\n        }\n\n        for (Node node: toMove) {\n            element.removeChild(node);\n>>> [ INFILL ] <<<\n        }\n    }",
    "project": "Jsoup",
    "test_error_message": "junit.framework.AssertionFailedError: expected:<[foo bar baz]> but was:<[bar baz foo]>",
    "test_framework": "defects4j",
    "test_line": "        assertEquals (\"foo bar baz\", doc.text());",
    "test_name": "createsStructureFromBodySnippet",
    "test_suite": "org.jsoup.parser.ParserTest",
    "time_buggy": "2011-07-02 21:11:52 +1000",
    "time_fixed": "2011-07-02 21:11:53 +1000",
    "bug_description": "Bug ID: 1\n\nProject: Jsoup\n\nBug Type: Statement/Sequence Order Flaw (SH SF)\n\nBug Description:\n\nThe bug found in the Jsoup project is a Statement Order Bug (SH SF). Specifically, there is an error with the appendChild() methods in the 'normalise' function, causing an unexpected output when the function is executed during unittests.\n\nSteps leading to the error:\n\n1. The normalise function takes an Element object as an argument. The Element object contains child Nodes.\n2. For each child node in the element that is an instance of the TextNode object and not blank, they are added to the List of Nodes object 'toMove'.\n3. After that, each node in the 'toMove' list is removed from the initial element and appended to the body of the document.\n4. Herein lies the issue. The new TextNode(\" \", \"\") is appended first and then the actual TextNode in the list. This sequence leads to the output being produced in the wrong order.\n\nOriginal Error Message from Test:\n\nThe error message from the junit test is junit.framework.AssertionFailedError: expected:<[foo bar baz]> but was:<[bar baz foo]>. Due to the incorrect order of appending new TextNode and the actual TextNode from the 'toMove' list, the order of the words 'foo', 'bar' and 'baz' gets scrambled.\n\nLines of Code causing the Bug:\n\n                body().appendChild(new TextNode(\" \", \"\"));\n                body().appendChild(node);\n\nSolution:\n\nTo fix the bug, the order of methods need to be swapped. The original TextNode from the 'toMove' list should be appended first and then the new TextNode. Hence, the correct lines would be:\n\n                body().prependChild(node);\n                body().prependChild(new TextNode(\" \", \"\"));\n\nThis ordering ensures that nodes are moved in the correct sequence, maintaining the order of text as expected in the test.\n\nWith this fix applied, the code no longer throws the AssertionFailedError and the tests pass as expected."
}