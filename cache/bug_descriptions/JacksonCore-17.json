{
    "bug_id": 17,
    "bug_type": "SL SH SF",
    "buggy_lines": "                    _reportError(\"Split surrogate on writeRaw() input (last character)\");",
    "code": "    private final int _outputRawMultiByteChar(int ch, char[] cbuf, int inputOffset, int inputEnd)\n        throws IOException\n    {\n        // Let's handle surrogates gracefully (as 4 byte output):\n        if (ch >= SURR1_FIRST) {\n            if (ch <= SURR2_LAST) { // yes, outside of BMP\n                // Do we have second part?\n                if (inputOffset >= inputEnd || cbuf == null) { // nope... have to note down\n                    _reportError(\"Split surrogate on writeRaw() input (last character)\");\n                }\n                _outputSurrogates(ch, cbuf[inputOffset]);\n                return inputOffset+1;\n            }\n        }\n        final byte[] bbuf = _outputBuffer;\n        bbuf[_outputTail++] = (byte) (0xe0 | (ch >> 12));\n        bbuf[_outputTail++] = (byte) (0x80 | ((ch >> 6) & 0x3f));\n        bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n        return inputOffset;\n    }",
    "fixed_code": "    private final int _outputRawMultiByteChar(int ch, char[] cbuf, int inputOffset, int inputEnd)\n        throws IOException\n    {\n        // Let's handle surrogates gracefully (as 4 byte output):\n        if (ch >= SURR1_FIRST) {\n            if (ch <= SURR2_LAST) { // yes, outside of BMP\n                // Do we have second part?\n                if (inputOffset >= inputEnd || cbuf == null) { // nope... have to note down\n                    _reportError(String.format(\n\"Split surrogate on writeRaw() input (last character): first character 0x%4x\", ch));\n                }\n                _outputSurrogates(ch, cbuf[inputOffset]);\n                return inputOffset+1;\n            }\n        }\n        final byte[] bbuf = _outputBuffer;\n        bbuf[_outputTail++] = (byte) (0xe0 | (ch >> 12));\n        bbuf[_outputTail++] = (byte) (0x80 | ((ch >> 6) & 0x3f));\n        bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n        return inputOffset;\n    }",
    "fixed_lines": "                    _reportError(String.format(\n\"Split surrogate on writeRaw() input (last character): first character 0x%4x\", ch));",
    "masked_code": "    private final int _outputRawMultiByteChar(int ch, char[] cbuf, int inputOffset, int inputEnd)\n        throws IOException\n    {\n        // Let's handle surrogates gracefully (as 4 byte output):\n        if (ch >= SURR1_FIRST) {\n            if (ch <= SURR2_LAST) { // yes, outside of BMP\n                // Do we have second part?\n                if (inputOffset >= inputEnd || cbuf == null) { // nope... have to note down\n>>> [ INFILL ] <<<\n                }\n                _outputSurrogates(ch, cbuf[inputOffset]);\n                return inputOffset+1;\n            }\n        }\n        final byte[] bbuf = _outputBuffer;\n        bbuf[_outputTail++] = (byte) (0xe0 | (ch >> 12));\n        bbuf[_outputTail++] = (byte) (0x80 | ((ch >> 6) & 0x3f));\n        bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n        return inputOffset;\n    }",
    "project": "JacksonCore",
    "test_error_message": "com.fasterxml.jackson.core.JsonGenerationException: Split surrogate on writeRaw() input (last character)",
    "test_framework": "defects4j",
    "test_line": "                g.writeRawValue(text, OFFSET, text.length() - OFFSET);",
    "test_name": "testRawWithSurrogatesString",
    "test_suite": "com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest",
    "time_buggy": "2016-07-22 19:24:58 -0700",
    "time_fixed": "2016-08-18 23:09:52 -0700",
    "bug_description": "Bug ID: 17\nProject: JacksonCore\nBug Type: SL SH SF\n\nDescription:\n\nThe bug occurs in the '_outputRawMultiByteChar' method, within an if-statement that handles surrogate pairs as 4-byte output. Surrogate pairs in Unicode are used to represent characters beyond the Basic Multilingual Plane (BMP), which includes historic scripts, musical and mathematical symbols, and emoji. \n\nThe error arises when the program is trying to write raw input, but encounters a split surrogate: a high surrogate character without the following low surrogate character. This is a problem because surrogate pairs are meant to represent a single character: the high surrogate indicates that a character outside the BMP is being used, and the low surrogate specifies the exact character.\n\nThe error message \"com.fasterxml.jackson.core.JsonGenerationException: Split surrogate on writeRaw() input (last character)\" suggests that the last character was the first part of a surrogate pair, but the second part wasn't found.\n\nThis can occur if the input is cut off in the middle of a surrogate pair (inputOffset >= inputEnd), or if the character buffer where this information would be stored is null. At this moment, the '_reportError' method is called to record this problem. The error message it outputs, however, does not include information about the problematic character. \n\nTo resolve this issue, the string passed to '_reportError' has been changed. Rather than a generic error message, the updated code uses a formatted string. This string includes the hexadecimal value of the first part of the surrogate, providing additional context when the error occurs.\n\nSteps-to-reproduce for generating this bug artificially is not provided as it may encourage the creation of problematic code. This summary focuses on understanding and fixing the bug rather than reintroducing it."
}